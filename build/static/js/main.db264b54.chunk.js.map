{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","index","this","squares","renderSquare","React","Component","Game","state","Array","fill","nextMove","calculateWinner","setState","hasWinner","winner","filledSquares","filter","Boolean","draw","length","handleClick","restartGame","some","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"oQAIA,SAASA,EAAOC,GACZ,OAAO,wBAAQC,UAAU,SAASC,QAAUF,EAAME,QAA3C,SACDF,EAAMG,Q,IAIVC,E,kKACF,SAAaC,GAAQ,IAAD,OAChB,OAAO,cAACN,EAAD,CAAQI,MAAQG,KAAKN,MAAMO,QAAQF,GAASH,QAAU,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAG1F,WACI,OACI,gCACI,sBAAKJ,UAAU,YAAf,UACMK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAExB,sBAAKP,UAAU,YAAf,UACMK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAExB,sBAAKP,UAAU,YAAf,UACMK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GArBpBC,IAAMC,WA6BpBC,E,kDACF,aAAe,IAAD,8BACV,gBAGKC,MAAQ,CACTL,QAASM,MAAM,GAAGC,KAAK,MACvBC,SAAU,KANJ,E,+CAUd,SAAYV,GACR,IAAME,EAAUD,KAAKM,MAAML,QAE3B,IAAIA,EAAQF,KAAUW,EAAgBT,GAAtC,CAIAA,EAAQF,GAASC,KAAKM,MAAMG,SAE5B,IAAMA,EAAmC,MAAxBT,KAAKM,MAAMG,SAAmB,IAAM,IAErDT,KAAKW,SAAS,CACVV,UACAQ,gB,yBAIR,WACIT,KAAKW,SAAS,CACVV,QAASM,MAAM,GAAGC,KAAK,MACvBC,SAAU,Q,oBAIlB,WAAU,IAAD,OACCR,EAAUD,KAAKM,MAAML,QACrBQ,EAAWT,KAAKM,MAAMG,SAEtBG,EAAYF,EAAgBT,GAE5BY,EAAsB,MAAbJ,EAAmB,IAAM,IAElCK,EAAgBb,EAAQc,OAAOC,SAC/BC,GAAQL,GAAaX,EAAQiB,SAAWJ,EAAcI,OAE5D,OACI,sBAAKvB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CAAOG,QAAUD,KAAKM,MAAML,QAAUL,QAAU,SAACG,GAAD,OAAW,EAAKoB,YAAYpB,QAGhF,sBAAKJ,UAAU,YAAf,UACOiB,GAAcK,EAAuC,GAAhC,sBAAqBR,EAC3CG,EAAYC,EAAS,WAAa,GAClCI,EAAO,cAAgB,GAAG,uBAC5B,uBACA,wBAAQrB,QAAU,kBAAM,EAAKwB,eAA7B,sC,GAzDDjB,IAAMC,WAuEzB,SAASM,EAAgBT,GA0BrB,MAzBc,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAiBEoB,MAAK,mCAAEC,EAAF,KAAKC,EAAL,KAAQC,EAAR,YAAevB,EAAQqB,IAAMrB,EAAQqB,KAAOrB,EAAQsB,IAAMtB,EAAQqB,KAAOrB,EAAQuB,MAjCvGC,IAASC,OAEL,cAACrB,EAAD,IAEAsB,SAASC,eAAe,W","file":"static/js/main.db264b54.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return <button className=\"square\" onClick={ props.onClick }>\r\n        { props.value }\r\n    </button>;\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(index) {\r\n        return <Square value={ this.props.squares[index] } onClick={ () => this.props.onClick(index) }/>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    { this.renderSquare(0) }\r\n                    { this.renderSquare(1) }\r\n                    { this.renderSquare(2) }\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    { this.renderSquare(3) }\r\n                    { this.renderSquare(4) }\r\n                    { this.renderSquare(5) }\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    { this.renderSquare(6) }\r\n                    { this.renderSquare(7) }\r\n                    { this.renderSquare(8) }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Criação do componente Game\r\nclass Game extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        // Defino o estado inicial do Game\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            nextMove: 'X'\r\n        };\r\n    }\r\n\r\n    handleClick(index) {\r\n        const squares = this.state.squares;\r\n\r\n        if (squares[index] || calculateWinner(squares)) {\r\n            return;\r\n        }\r\n\r\n        squares[index] = this.state.nextMove;\r\n\r\n        const nextMove = this.state.nextMove === 'X' ? 'O' : 'X';\r\n\r\n        this.setState({\r\n            squares,\r\n            nextMove\r\n        });\r\n    }\r\n\r\n    restartGame() {\r\n        this.setState({\r\n            squares: Array(9).fill(null),\r\n            nextMove: 'X'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const squares = this.state.squares;\r\n        const nextMove = this.state.nextMove;\r\n\r\n        const hasWinner = calculateWinner(squares);\r\n\r\n        const winner = nextMove === 'X' ? 'O' : 'X';\r\n\r\n        const filledSquares = squares.filter(Boolean);\r\n        const draw = !hasWinner && squares.length === filledSquares.length;\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={ this.state.squares } onClick={ (index) => this.handleClick(index) }/>\r\n                </div>\r\n\r\n                <div className=\"game-info\">\r\n                    { !hasWinner && !draw ? 'Próxima jogada: ' + nextMove : '' }\r\n                    { hasWinner ? winner + ' venceu!' : '' }\r\n                    { draw ? 'Deu velha!!' : ''}<br/>\r\n                    <br/>\r\n                    <button onClick={ () => this.restartGame() }>Reiniciar Jogo</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    // Elemento que será renderizado\r\n    <Game/>,\r\n    // Local em que esse elemento será renderizado\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    /*\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n        const a = line[0];\r\n        const b = line[1];\r\n        const c = line[2];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n    */\r\n\r\n    return lines.some(([a, b, c]) => squares[a] && squares[a] === squares[b] && squares[a] === squares[c]);\r\n}\r\n"],"sourceRoot":""}